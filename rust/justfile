profile := if env("BUILD_PROFILE", "") == "SMALL" {
  "small"
} else if env("BUILD_PROFILE", "") == "FAST" {
  "fast"
} else {
  "dev"
}
build_flags := "--profile="+profile

profile_dirname := if env("BUILD_PROFILE", "") == "SMALL" {
  "small"
} else if env("BUILD_PROFILE", "") == "FAST" {
  "fast"
} else {
  "debug"
}

export RUSTFLAGS := if env("BUILD_PROFILE", "") == "SMALL" {
  "-Zfmt-debug=none -Zlocation-detail=none"
} else if env("BUILD_PROFILE", "") == "FAST" {
  ""
} else {
  ""
}

arch := "arm-unknown-linux-gnueabihf"
arch_bm := "xtensa-esp32-espidf"
artifacts_dir := "../artifacts" / lowercase(env("BUILD_PROFILE", "DEBUG"))
esp_export := ". ../esp-export/rust.sh"

build-every-profile:
  BUILD_PROFILE=SMALL just build \
  && BUILD_PROFILE=FAST just build
build: build-os build-bm
build-os: blinky-build motor-build pid-build #dmc-build
build-bm:
  if test -z "${IDF_PATH:-}"; then {{esp_export}}; fi; \
  just blinky-bm-build && \
  just motor-bm-build && \
  just pid-bm-build

watch:
  just watch-os \
  & just watch-bm \
  & wait

watch-os:
  just blinky-watch \
  & just motor-watch \
  & just pid-watch \
  #& just dmc-watch \
  & wait

watch-bm:
  if test -z "${IDF_PATH:-}"; then {{esp_export}}; fi; \
  just blinky-bm-watch \
  & just motor-bm-watch \
  & just pid-bm-watch \
  & wait

clean:
  rm -rf ./target

blinky-build: (_build "1" "blinky")
blinky-watch: (_watch "1" "blinky")

blinky-bm-build: (_build-bm "1" "blinky-bm")
blinky-bm-watch: (_watch-bm "1" "blinky-bm")
blinky-bm-flash: (_run-bm "1" "blinky-bm")

motor-build: (_build "2" "motor")
motor-watch: (_watch "2" "motor")

motor-bm-build: (_build-bm "2" "motor-bm")
motor-bm-watch: (_watch-bm "2" "motor-bm")
motor-bm-flash: (_run-bm "2" "motor-bm")

pid-build: (_build "3" "pid")
pid-watch: (_watch "3" "pid")

pid-bm-build: (_build-bm "3" "pid-bm")
pid-bm-watch: (_watch-bm "3" "pid-bm")
pid-bm-flash: (_run-bm "3" "pid-bm")

dmc-build: (_build "4" "dmc")
dmc-watch: (_watch "4" "dmc")

_watch NUM PACKAGE:
  watchexec --postpone --wrap-process session --verbose \
  -e rs,toml -w ./{{NUM}}-{{PACKAGE}} \
  --on-busy-update=restart --stop-signal=SIGKILL \
  -- just _build \"{{NUM}}\" \"{{PACKAGE}}\"

_build NUM PACKAGE: _make_artifact_dir
  cross build --package {{PACKAGE}} {{build_flags}} --target={{arch}} \
  && cp ./target/{{arch}}/{{profile_dirname}}/{{PACKAGE}} {{artifacts_dir}}/{{NUM}}-{{PACKAGE}}-rust

_watch-bm NUM PACKAGE:
  if test -z "${IDF_PATH:-}"; then {{esp_export}}; fi; \
  watchexec --postpone --wrap-process session --verbose \
  -e rs,toml -w ./{{NUM}}-{{PACKAGE}} \
  --on-busy-update=restart --stop-signal=SIGKILL \
  -- just _build-bm \"{{NUM}}\" \"{{PACKAGE}}\"

_build-bm NUM PACKAGE: _make_artifact_dir
  if test -z "${IDF_PATH:-}"; then {{esp_export}}; fi; \
  cd ./{{NUM}}-{{PACKAGE}}/ && cargo build {{build_flags}} \
  && espflash save-image --chip esp32 \
    ./target/{{arch_bm}}/{{profile_dirname}}/{{NUM}}-{{PACKAGE}} \
    ./target/{{arch_bm}}/{{profile_dirname}}/{{NUM}}-{{PACKAGE}}.bin \
  && cp ./target/{{arch_bm}}/{{profile_dirname}}/{{NUM}}-{{PACKAGE}}.bin ../{{artifacts_dir}}/{{NUM}}-{{PACKAGE}}-rust \
  && cp ./target/{{arch_bm}}/{{profile_dirname}}/{{NUM}}-{{PACKAGE}} ../{{artifacts_dir}}/{{NUM}}-{{PACKAGE}}-rust.elf

_run-bm NUM PACKAGE:
  if test -z "${IDF_PATH:-}"; then {{esp_export}}; fi; \
  cd ./{{NUM}}-{{PACKAGE}}/ && cargo run {{build_flags}}

_make_artifact_dir:
  mkdir -p {{artifacts_dir}}
