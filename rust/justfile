profile := "release"
# profile := "debug"

arch := "arm-unknown-linux-gnueabihf"
arch_bm := "xtensa-esp32-espidf"
opts := if profile == "release" {"--release"} else {""}
artifacts_dir := "../artifacts/"
esp_export := ". ../esp-export/rust.sh"

build: build-os build-bm
build-os: blinky-build motor-build pid-build #dmc-build
build-bm:
  if test -z "${IDF_PATH:-}"; then {{esp_export}}; fi; \
  just blinky-bm-build && \
  just motor-bm-build && \
  just pid-bm-build

watch:
  just watch-os \
  & just watch-bm \
  & wait

watch-os:
  just blinky-watch \
  & just motor-watch \
  & just pid-watch \
  #& just dmc-watch \
  & wait

watch-bm:
  if test -z "${IDF_PATH:-}"; then {{esp_export}}; fi; \
  just blinky-bm-watch \
  & just motor-bm-watch \
  & just pid-bm-watch \
  & wait

clean:
  rm -rf ./target

blinky-build: (_build "1" "blinky")
blinky-watch: (_watch "1" "blinky")

blinky-bm-build: (_build-bm "1" "blinky-bm")
blinky-bm-watch: (_watch-bm "1" "blinky-bm")
blinky-bm-flash: (_run-bm "1" "blinky-bm")

motor-build: (_build "2" "motor")
motor-watch: (_watch "2" "motor")

motor-bm-build: (_build-bm "2" "motor-bm")
motor-bm-watch: (_watch-bm "2" "motor-bm")
motor-bm-flash: (_run-bm "2" "motor-bm")

pid-build: (_build "3" "pid")
pid-watch: (_watch "3" "pid")

pid-bm-build: (_build-bm "3" "pid-bm")
pid-bm-watch: (_watch-bm "3" "pid-bm")
pid-bm-flash: (_run-bm "3" "pid-bm")

dmc-build: (_build "4" "dmc")
dmc-watch: (_watch "4" "dmc")

_watch NUM PACKAGE:
  watchexec --postpone --wrap-process session --verbose \
  -e rs,toml -w ./{{NUM}}-{{PACKAGE}} \
  --on-busy-update=restart --stop-signal=SIGKILL \
  -- just _build \"{{NUM}}\" \"{{PACKAGE}}\"

_build NUM PACKAGE:
  cross build --package {{PACKAGE}} {{opts}} --target={{arch}} \
  && cp ./target/{{arch}}/{{profile}}/{{PACKAGE}} ../artifacts/{{NUM}}-{{PACKAGE}}-rust

_watch-bm NUM PACKAGE:
  if test -z "${IDF_PATH:-}"; then {{esp_export}}; fi; \
  watchexec --postpone --wrap-process session --verbose \
  -e rs,toml -w ./{{NUM}}-{{PACKAGE}} \
  --on-busy-update=restart --stop-signal=SIGKILL \
  -- just _build-bm \"{{NUM}}\" \"{{PACKAGE}}\"

_build-bm NUM PACKAGE:
  if test -z "${IDF_PATH:-}"; then {{esp_export}}; fi; \
  cd ./{{NUM}}-{{PACKAGE}}/ && cargo build {{opts}} \
  && cp ./target/{{arch_bm}}/{{profile}}/{{NUM}}-{{PACKAGE}} ../../artifacts/{{NUM}}-{{PACKAGE}}-rust

_run-bm NUM PACKAGE:
  if test -z "${IDF_PATH:-}"; then {{esp_export}}; fi; \
  cd ./{{NUM}}-{{PACKAGE}}/ && cargo run {{opts}}
